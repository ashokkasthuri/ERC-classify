// Autogenerated by `ercs.mjs`. DO NOT MODIFY
export default {
    ERC1155: {
        selectors: [
            '00fdd58e',
            '4e1273f4',
            'e985e9c5',
            '2eb2c2d6',
            'f242432a',
            'a22cb465',
            '01ffc9a7'
        ],
        topics: [
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            '4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb',
            'c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62',
            '6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b'
        ],
        functions: {
            '00fdd58e': 'function balanceOf(address _owner, uint256 _id) view returns (uint256)',
            '4e1273f4': 'function balanceOfBatch(address[] _owners, uint256[] _ids) view returns (uint256[])',
            e985e9c5: 'function isApprovedForAll(address _owner, address _operator) view returns (bool)',
            '2eb2c2d6': 'function safeBatchTransferFrom(address _from, address _to, uint256[] _ids, uint256[] _values, bytes _data)',
            f242432a: 'function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes _data)',
            a22cb465: 'function setApprovalForAll(address _operator, bool _approved)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)'
        },
        events: {
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31': 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)',
            '4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb': 'event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values)',
            c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62: 'event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value)',
            '6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b': 'event URI(string _value, uint256 indexed _id)',
        }
    },
    ERC1155MetadataURI: {
        selectors: [
            '00fdd58e',
            '4e1273f4',
            'e985e9c5',
            '2eb2c2d6',
            'f242432a',
            'a22cb465',
            '01ffc9a7',
            '0e89341c'
        ],
        topics: [
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            '4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb',
            'c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62',
            '6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b'
        ],
        functions: {
            '00fdd58e': 'function balanceOf(address _owner, uint256 _id) view returns (uint256)',
            '4e1273f4': 'function balanceOfBatch(address[] _owners, uint256[] _ids) view returns (uint256[])',
            e985e9c5: 'function isApprovedForAll(address _owner, address _operator) view returns (bool)',
            '2eb2c2d6': 'function safeBatchTransferFrom(address _from, address _to, uint256[] _ids, uint256[] _values, bytes _data)',
            f242432a: 'function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes _data)',
            a22cb465: 'function setApprovalForAll(address _operator, bool _approved)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
            '0e89341c': 'function uri(uint256 _id) view returns (string)'
        },
        events: {
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31': 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)',
            '4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb': 'event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values)',
            c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62: 'event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value)',
            '6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b': 'event URI(string _value, uint256 indexed _id)'
        }
    },
    ERC165: {
        selectors: ['01ffc9a7'],
        topics: [],
        functions: {
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
        },
        events: {},
    },
    ERC173: {
        selectors: ['8da5cb5b', '01ffc9a7', 'f2fde38b'],
        topics: ['8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0'],
        functions: {
            '8da5cb5b': 'function owner() view returns (address)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
            f2fde38b: 'function transferOwnership(address _newOwner)',
        },
        events: {
            '8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0':
                'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
        },
    },
    ERC20: {
        selectors: ['dd62ed3e', '095ea7b3', '70a08231', '18160ddd', 'a9059cbb', '23b872dd'],
        topics: [
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
        ],
        functions: {
            dd62ed3e:
                'function allowance(address _owner, address _spender) view returns (uint256 remaining)',
            '095ea7b3': 'function approve(address _spender, uint256 _value) returns (bool success)',
            '70a08231': 'function balanceOf(address _owner) view returns (uint256 balance)',
            '18160ddd': 'function totalSupply() view returns (uint256)',
            a9059cbb: 'function transfer(address _to, uint256 _value) returns (bool success)',
            '23b872dd':
                'function transferFrom(address _from, address _to, uint256 _value) returns (bool success)',
        },
        events: {
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925':
                'event Approval(address indexed _owner, address indexed _spender, uint256 _value)',
            ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef:
                'event Transfer(address indexed _from, address indexed _to, uint256 _value)',
        },
    },
    ERC20Metadata: {
        selectors: [
            'dd62ed3e',
            '095ea7b3',
            '70a08231',
            '313ce567',
            '06fdde03',
            '95d89b41',
            '18160ddd',
            'a9059cbb',
            '23b872dd',
        ],
        topics: [
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
        ],
        functions: {
            dd62ed3e:
                'function allowance(address _owner, address _spender) view returns (uint256 remaining)',
            '095ea7b3': 'function approve(address _spender, uint256 _value) returns (bool success)',
            '70a08231': 'function balanceOf(address _owner) view returns (uint256 balance)',
            '313ce567': 'function decimals() view returns (uint8)',
            '06fdde03': 'function name() view returns (string)',
            '95d89b41': 'function symbol() view returns (string)',
            '18160ddd': 'function totalSupply() view returns (uint256)',
            a9059cbb: 'function transfer(address _to, uint256 _value) returns (bool success)',
            '23b872dd':
                'function transferFrom(address _from, address _to, uint256 _value) returns (bool success)',
        },
        events: {
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925':
                'event Approval(address indexed _owner, address indexed _spender, uint256 _value)',
            ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef:
                'event Transfer(address indexed _from, address indexed _to, uint256 _value)',
        },
    },
    ERC721: {
        selectors: [
            '095ea7b3',
            '70a08231',
            '081812fc',
            'e985e9c5',
            '6352211e',
            '42842e0e',
            'b88d4fde',
            'a22cb465',
            '01ffc9a7',
            '23b872dd',
        ],
        topics: [
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
        ],
        functions: {
            '095ea7b3': 'function approve(address _approved, uint256 _tokenId) payable',
            '70a08231': 'function balanceOf(address _owner) view returns (uint256)',
            '081812fc': 'function getApproved(uint256 _tokenId) view returns (address)',
            e985e9c5:
                'function isApprovedForAll(address _owner, address _operator) view returns (bool)',
            '6352211e': 'function ownerOf(uint256 _tokenId) view returns (address)',
            '42842e0e':
                'function safeTransferFrom(address _from, address _to, uint256 _tokenId) payable',
            b88d4fde:
                'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) payable',
            a22cb465: 'function setApprovalForAll(address _operator, bool _approved)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
            '23b872dd':
                'function transferFrom(address _from, address _to, uint256 _tokenId) payable',
        },
        events: {
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925':
                'event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31':
                'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)',
            ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef:
                'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)',
        },
    },
    ERC721Enumerable: {
        selectors: [
            '095ea7b3',
            '70a08231',
            '081812fc',
            'e985e9c5',
            '6352211e',
            '42842e0e',
            'b88d4fde',
            'a22cb465',
            '01ffc9a7',
            '4f6ccce7',
            '2f745c59',
            '18160ddd',
            '23b872dd',
        ],
        topics: [
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
        ],
        functions: {
            '095ea7b3': 'function approve(address _approved, uint256 _tokenId) payable',
            '70a08231': 'function balanceOf(address _owner) view returns (uint256)',
            '081812fc': 'function getApproved(uint256 _tokenId) view returns (address)',
            e985e9c5: 'function isApprovedForAll(address _owner, address _operator) view returns (bool)',
            '6352211e': 'function ownerOf(uint256 _tokenId) view returns (address)',
            '42842e0e': 'function safeTransferFrom(address _from, address _to, uint256 _tokenId) payable',
            b88d4fde: 'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) payable',
            a22cb465: 'function setApprovalForAll(address _operator, bool _approved)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
            '4f6ccce7': 'function tokenByIndex(uint256 _index) view returns (uint256)',
            '2f745c59': 'function tokenOfOwnerByIndex(address _owner, uint256 _index) view returns (uint256)',
            '18160ddd': 'function totalSupply() view returns (uint256)',
            '23b872dd': 'function transferFrom(address _from, address _to, uint256 _tokenId) payable'
        },
        events: {
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925': 'event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31': 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)',
            ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef: 'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)'
        }
    },
    ERC721Metadata: {
        selectors: [
            '095ea7b3',
            '70a08231',
            '081812fc',
            'e985e9c5',
            '06fdde03',
            '6352211e',
            '42842e0e',
            'b88d4fde',
            'a22cb465',
            '01ffc9a7',
            '95d89b41',
            'c87b56dd',
            '23b872dd',
        ],
        topics: [
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
        ],
        functions: {
            '095ea7b3': 'function approve(address _approved, uint256 _tokenId) payable',
            '70a08231': 'function balanceOf(address _owner) view returns (uint256)',
            '081812fc': 'function getApproved(uint256 _tokenId) view returns (address)',
            e985e9c5: 'function isApprovedForAll(address _owner, address _operator) view returns (bool)',
            '06fdde03': 'function name() view returns (string)',
            '6352211e': 'function ownerOf(uint256 _tokenId) view returns (address)',
            '42842e0e': 'function safeTransferFrom(address _from, address _to, uint256 _tokenId) payable',
            b88d4fde: 'function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) payable',
            a22cb465: 'function setApprovalForAll(address _operator, bool _approved)',
            '01ffc9a7': 'function supportsInterface(bytes4 interfaceID) view returns (bool)',
            '95d89b41': 'function symbol() view returns (string)',
            c87b56dd: 'function tokenURI(uint256 _tokenId) view returns (string)',
            '23b872dd': 'function transferFrom(address _from, address _to, uint256 _tokenId) payable'
        },
        events: {
            '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925': 'event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)',
            '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31': 'event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)',
            ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef: 'event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)'
        }
    },

    ERC777: {
        selectors: [
            '06fdde03', // name() external view returns (string)
            '95d89b41', // symbol() external view returns (string)
            '18160ddd', // totalSupply() external view returns (uint256)
            '70a08231', // balanceOf(address owner) external view returns (uint256)
            'b7b94b1a', // send(address to, uint256 amount, bytes calldata data) external
            'a9059cbb', // transfer(address to, uint256 amount) external returns (bool)
            'c89b94b2', // authorizeOperator(address operator) external
            'd4e5f6a3', // revokeOperator(address operator) external
            'e3a4c5b6', // isOperatorFor(address operator, address tokenHolder) external view returns (bool)
            'f1a2b3c4', // operatorSend(address from, address to, uint256 amount, bytes calldata data, bytes calldata operatorData) external
            'a1b2c3d4', // burn(uint256 amount, bytes calldata data) external
            'b1c2d3e4', // operatorBurn(address from, uint256 amount, bytes calldata data, bytes calldata operatorData) external
            'c1d2e3f4'  // granularity() external view returns (uint256)
        ],
        topics: [
            // (These are the hashed event signatures. The actual values below are placeholders.)
            'sent_topic_hash',                 // Sent event topic
            'minted_topic_hash',               // Minted event topic
            'burned_topic_hash',               // Burned event topic
            'authorized_operator_topic_hash',  // AuthorizedOperator event topic
            'revoked_operator_topic_hash'      // RevokedOperator event topic
        ],
        functions: {
            '06fdde03': 'function name() external view returns (string)',
            '95d89b41': 'function symbol() external view returns (string)',
            '18160ddd': 'function totalSupply() external view returns (uint256)',
            '70a08231': 'function balanceOf(address owner) external view returns (uint256)',
            'b7b94b1a': 'function send(address to, uint256 amount, bytes calldata data) external',
            'a9059cbb': 'function transfer(address to, uint256 amount) external returns (bool)',
            'c89b94b2': 'function authorizeOperator(address operator) external',
            'd4e5f6a3': 'function revokeOperator(address operator) external',
            'e3a4c5b6': 'function isOperatorFor(address operator, address tokenHolder) external view returns (bool)',
            'f1a2b3c4': 'function operatorSend(address from, address to, uint256 amount, bytes calldata data, bytes calldata operatorData) external',
            'a1b2c3d4': 'function burn(uint256 amount, bytes calldata data) external',
            'b1c2d3e4': 'function operatorBurn(address from, uint256 amount, bytes calldata data, bytes calldata operatorData) external',
            'c1d2e3f4': 'function granularity() external view returns (uint256)'
        },
        events: {
            'sent_topic_hash': 'event Sent(address indexed operator, address indexed from, address indexed to, uint256 amount, bytes data, bytes operatorData)',
            'minted_topic_hash': 'event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData)',
            'burned_topic_hash': 'event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData)',
            'authorized_operator_topic_hash': 'event AuthorizedOperator(address indexed operator, address indexed tokenHolder)',
            'revoked_operator_topic_hash': 'event RevokedOperator(address indexed operator, address indexed tokenHolder)'
        }
    }, 
    ERC2981: {
        selectors: [
            '2a55205a'  // Selector for royaltyInfo(uint256,uint256)
        ],
        topics: [
            // No mandatory events defined for ERC-2981
        ],
        functions: {
            '2a55205a': 'function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view returns (address receiver, uint256 royaltyAmount)'
        },
        events: {
            // No mandatory events for ERC-2981; optional events can be added if needed.
        }
    }, 

    ERC223: {
        // The selector for the mandatory transfer function.
        selectors: [
            'b6b55f25'  // This 4-byte selector corresponds to: 
                        // transfer(address _to, uint256 _value, bytes calldata _data)
        ],
        topics: [
            // A placeholder topic hash for the Transfer event.
            'transfer_topic_hash'
        ],
        functions: {
            'b6b55f25': 'function transfer(address _to, uint256 _value, bytes calldata _data) external returns (bool success)'
        },
        // Although tokenReceived is not part of the token contract itself,
        // recipient contracts MUST implement this function to safely receive tokens.
        // Including it here for completeness.
        optionalFunctions: {
            tokenReceived: 'function tokenReceived(address _from, uint256 _value, bytes calldata _data) returns (bytes4)'
        },
        events: {
            'transfer_topic_hash': 'event Transfer(address indexed from, address indexed to, uint256 value, bytes data)'
        }
    }, 
    ERC884: {
        // Dummy selectors – in practice, these are the first 4 bytes of keccak256(functionSignature)
        selectors: [
            'abcd1234', // getCurrentFor(address addr) public view returns (address)
            'bcde2345', // isSuperseded(address addr) public view returns (bool)
            'cdef3456', // holderAt(uint256 index) public view returns (address)
            'defa4567', // holderCount() public view returns (uint)
            'efab5678', // isVerified(address addr) public view returns (bool)
            'fabc6789', // isHolder(address addr) public view returns (bool)
            'abcf7890', // hasHash(address addr, bytes32 hash) public view returns (bool)
            'bcaf8901', // addVerified(address addr, bytes32 hash) public
            'cafb9012', // removeVerified(address addr) public
            'afcb0123', // updateVerified(address addr, bytes32 hash) public
            'bfac1234'  // cancelAndReissue(address _original, address _replacement) public
        ],
        // Placeholder event topic hashes for the 4 mandatory events.
        topics: [
            'topic1_placeholder',  // e.g. event VerifiedAdded(...)
            'topic2_placeholder',  // e.g. event VerifiedRemoved(...)
            'topic3_placeholder',  // e.g. event VerifiedUpdated(...)
            'topic4_placeholder'   // e.g. event CancelAndReissue(...)
        ],
        functions: {
            'abcd1234': 'function getCurrentFor(address addr) public view returns (address)',
            'bcde2345': 'function isSuperseded(address addr) public view returns (bool)',
            'cdef3456': 'function holderAt(uint256 index) public view returns (address)',
            'defa4567': 'function holderCount() public view returns (uint)',
            'efab5678': 'function isVerified(address addr) public view returns (bool)',
            'fabc6789': 'function isHolder(address addr) public view returns (bool)',
            'abcf7890': 'function hasHash(address addr, bytes32 hash) public view returns (bool)',
            'bcaf8901': 'function addVerified(address addr, bytes32 hash) public',
            'cafb9012': 'function removeVerified(address addr) public',
            'afcb0123': 'function updateVerified(address addr, bytes32 hash) public',
            'bfac1234': 'function cancelAndReissue(address _original, address _replacement) public'
        },
        events: {
            'topic1_placeholder': 'event VerifiedAdded(address indexed addr, bytes32 hash)',
            'topic2_placeholder': 'event VerifiedRemoved(address indexed addr)',
            'topic3_placeholder': 'event VerifiedUpdated(address indexed addr, bytes32 oldHash, bytes32 newHash)',
            'topic4_placeholder': 'event CancelAndReissue(address indexed original, address indexed replacement)'
        }
    }, 

    ERC998: {
        // Dummy selectors (placeholders) for each mandatory function.
        selectors: [
            '11111111', // transferChild(uint256 _fromTokenId, address _to, uint256 _childTokenId) external
            '22222222', // safeTransferChild(uint256 _fromTokenId, address _to, uint256 _childTokenId, bytes calldata _data) external
            '33333333', // transferChildToParent(address _from, uint256 _fromTokenId, address _toContract, uint256 _toTokenId, uint256 _childTokenId, bytes calldata _data) external
            '44444444', // getChild(address _from, uint256 _tokenId, address _childContract, uint256 _childTokenId) external
            '55555555', // safeTransferChild(uint256 _fromTokenId, address _to, address _childContract, uint256 _childTokenId) external
            '66666666', // onERC721Received(address _operator, address _from, uint256 _childTokenId, bytes calldata _data) external returns (bytes4)
            '77777777', // ownerOfChild(address _childContract, uint256 _childTokenId) public view returns (bytes32 parentTokenOwner)
            '88888888', // childContractByIndex(uint256 _tokenId, uint256 _index) external view returns (address childContract)
            '99999999', // childTokenByIndex(uint256 _tokenId, uint256 _index) external view returns (uint256 childTokenId)
            'aaaaaaaa', // rootOwnerOfChild(address _childContract, uint256 _childTokenId) public view returns (bytes32 rootOwner)
            'bbbbbbbb'  // rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)
        ],
        // Topics for events—if ERC‑998 mandates or supports events, you can list their hashed signatures here.
        topics: [
            // e.g., 'childTransferred_topic_hash', 'childReceived_topic_hash', etc.
        ],
        functions: {
            '11111111': 'function transferChild(uint256 _fromTokenId, address _to, uint256 _childTokenId) external',
            '22222222': 'function safeTransferChild(uint256 _fromTokenId, address _to, uint256 _childTokenId, bytes calldata _data) external',
            '33333333': 'function transferChildToParent(address _from, uint256 _fromTokenId, address _toContract, uint256 _toTokenId, uint256 _childTokenId, bytes calldata _data) external',
            '44444444': 'function getChild(address _from, uint256 _tokenId, address _childContract, uint256 _childTokenId) external',
            '55555555': 'function safeTransferChild(uint256 _fromTokenId, address _to, address _childContract, uint256 _childTokenId) external',
            '66666666': 'function onERC721Received(address _operator, address _from, uint256 _childTokenId, bytes calldata _data) external returns (bytes4)',
            '77777777': 'function ownerOfChild(address _childContract, uint256 _childTokenId) public view returns (bytes32 parentTokenOwner)',
            '88888888': 'function childContractByIndex(uint256 _tokenId, uint256 _index) external view returns (address childContract)',
            '99999999': 'function childTokenByIndex(uint256 _tokenId, uint256 _index) external view returns (uint256 childTokenId)',
            'aaaaaaaa': 'function rootOwnerOfChild(address _childContract, uint256 _childTokenId) public view returns (bytes32 rootOwner)',
            'bbbbbbbb': 'function rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)'
        },
        events: {
            // Optional events can be defined here.
            // For example, you might define:
            // 'childTransferred_topic_hash': 'event ChildTransferred(uint256 indexed parentTokenId, address indexed to, uint256 childTokenId)',
            // 'childReceived_topic_hash': 'event ChildReceived(uint256 indexed parentTokenId, address indexed from, uint256 childTokenId)'
        }
    }
    
    
    
    

};

